import os
import threading
from flask import Flask
from aiogram import Bot, Dispatcher, executor, types

# === Flask "healthcheck" —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render ===
app = Flask(__name__)

@app.get("/")
def health():
    return "Bot is running!"

def run_http():
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_http, daemon=True).start()
print("HTTP health server started")

# === Telegram –±–æ—Ç ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç üåø! –Ø —Ç–≤–æ–π Aroma-–±–æ—Ç, –Ω–∞–ø–∏—à–∏ /help")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message_handler(commands=["help"])
async def help_cmd(message: types.Message):
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n/help - –ø–æ–º–æ—â—å")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    print("Telegram bot starting...")
    executor.start_polling(dp, skip_updates=True)
